"use strict";(self.webpackChunkdoc_source=self.webpackChunkdoc_source||[]).push([[2326],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),d=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=d(e.components);return i.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),f=a,m=p["".concat(o,".").concat(f)]||p[f]||u[f]||r;return t?i.createElement(m,l(l({ref:n},c),{},{components:t})):i.createElement(m,l({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var d=2;d<r;d++)l[d]=t[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6571:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var i=t(3117),a=t(102),r=(t(7294),t(3905)),l=["components"],s={id:"SDCard",slug:"SDCard",title:"SD Card",sidebar_position:40,keywords:["SD Card","SDCARD","Examples"],description:"Example Reading and Writing to the SD Card"},o=void 0,d={unversionedId:"Examples/SDCard",id:"Examples/SDCard",title:"SD Card",description:"Example Reading and Writing to the SD Card",source:"@site/Quarto/Examples/SDCard.md",sourceDirName:"Examples",slug:"/Examples/SDCard",permalink:"/Quarto/Examples/SDCard",tags:[],version:"current",sidebarPosition:40,frontMatter:{id:"SDCard",slug:"SDCard",title:"SD Card",sidebar_position:40,keywords:["SD Card","SDCARD","Examples"],description:"Example Reading and Writing to the SD Card"},sidebar:"autoSideBar",previous:{title:"Pulsed Output Waveform",permalink:"/Quarto/Examples/Pulsed_Output"},next:{title:"List of Software Functions",permalink:"/Quarto/Functions/"}},c={},u=[],p={toc:u};function f(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To use the SDCard, we need to include the SdFat.h header and the instantiate the sd class and finally, run ",(0,r.kt)("inlineCode",{parentName:"p"},"sd.begin()")," to initialize the sd card:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include "SdFat.h"\nSdFs sd; \n\nvoid setup() {\n  sd.begin();  \n}\n')),(0,r.kt)("p",null,"Once that is done, we can use various sd functions such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"exists(filename)"),(0,r.kt)("li",{parentName:"ul"},"remove(filename)"),(0,r.kt)("li",{parentName:"ul"},"ls()"),(0,r.kt)("li",{parentName:"ul"},"mkdir(dirname)"),(0,r.kt)("li",{parentName:"ul"},"chdir(dirname)"),(0,r.kt)("li",{parentName:"ul"},"rmdir(dirname)")),(0,r.kt)("p",null,"But to make this program more robust, we should check if the ",(0,r.kt)("inlineCode",{parentName:"p"},"sd.begin()")," function was successful and only proceed if it was. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include "SdFat.h"\nSdFs sd;\n\nvoid setup() {  \n    while (sd.begin() == false) {\n        //Sd card failed, wait and try again\n        delay(1000); //wait 1000ms or 1 sec\n        Serial.println("Unable to connect to SD Card, was it inserted?");\n    }\n    Serial.println("Successfully connected to SD card.");   \n}\n')),(0,r.kt)("p",null,"Now we can write some functions to use the SD card. Here's a function to see if a file exists, and if so print the filesize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'char filename[] = "Data.dat";\nvoid readFile(void) {\n    if (sd.exists(filename)) {\n        FsFile file = sd.open(filename,O_RDONLY);\n        Serial.printf("File %s exists with size %d\\n",filename,file.fileSize());\n        file.close();\n    } else {\n        Serial.printf("File %s is missing!\\n",filename);\n    }\n}\n')),(0,r.kt)("p",null,"To write to a file and append data to it, we have:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'void writeFile(void) {\n    uint8_t data[] = {1,2,3,4,5,6,7,8,9,10,9,8,7,6,5,4,3,2,1,64,128,255};\n    FsFile file;\n    file = sd.open(filename,O_RDWR |  O_CREAT | O_APPEND);\n    if (file)  {\n        file.write(data,sizeof(data));\n        file.close();\n    } else {\n        Serial.println("Error opening Data.txt file.");\n        return;\n    }\n}\n')),(0,r.kt)("p",null,"And finally, if we want to erase the file, we have:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"void eraseFile(void) {\n    if (sd.exists(filename)) {\n        sd.remove(filename);\n    }\n}\n")),(0,r.kt)("p",null,"Putting this together, if we put into our setup function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'void setup() {\n    while (sd.begin() == false) {\n      //Sd card failed, wait and try again\n      delay(1000); //wait 1000ms or 1 sec\n      Serial.println("Unable to connect to SD Card, was it inserted?");\n    }\n    Serial.println("Successfully connected to SD card.");\n    eraseFile();\n    readFile();\n    writeFile();\n    readFile();\n    writeFile();\n    readFile();\n}\n')),(0,r.kt)("p",null,"Running this will return:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Unable to connect to SD Card, is it inserted?\nSuccessfully connected to SD card.\nFile Data.txt is missing!\nFile Data.txt exists with size 22\nFile Data.txt exists with size 44\n")),(0,r.kt)("p",null,"When the SD Card is first inserted, the Data.dat file is deleted and ",(0,r.kt)("inlineCode",{parentName:"p"},"readFile()")," reports the file is missing. Then ",(0,r.kt)("inlineCode",{parentName:"p"},"writeFile()")," writes the 22 byte array to that file and ",(0,r.kt)("inlineCode",{parentName:"p"},"readFile()")," reports 22 bytes written. When ",(0,r.kt)("inlineCode",{parentName:"p"},"writeFile()")," is called a second time, it appends another 22 bytes to the file, so when ",(0,r.kt)("inlineCode",{parentName:"p"},"readFile()")," is subsequently called, it sees 44 bytes. In this way, data can be logged and saved to a file. "),(0,r.kt)("p",null,"The full file is available in Examples, Examples for Quarto, SD, BasicReadWriteDelete or below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include "SdFat.h"\nSdFs sd;\nchar filename[] = "Data.dat";\n\nvoid setup() {\n    while (sd.begin() == false) {\n      //Sd card failed, wait and try again\n      delay(1000); //wait 1000ms or 1 sec\n      Serial.println("Unable to connect to SD Card, is it inserted?");\n    }\n    Serial.println("Successfully connected to SD card.");\n    eraseFile();\n    readFile();\n    writeFile();\n    readFile();\n    writeFile();\n    readFile();\n}\n\nvoid readFile(void) {\n    if (sd.exists(filename)) {\n        FsFile file = sd.open(filename,O_RDONLY);\n        Serial.printf("File %s exists with size %d\\n",filename,file.fileSize());\n        file.close();\n    } else {\n        Serial.printf("File %s is missing!\\n",filename);\n    }\n}\n\nvoid writeFile(void) {\n    uint8_t data[] = {1,2,3,4,5,6,7,8,9,10,9,8,7,6,5,4,3,2,1,64,128,255};\n    FsFile file;\n    file = sd.open(filename,O_RDWR |  O_CREAT | O_APPEND);\n    if (file)  {        \n        file.write(data,sizeof(data));\n        file.close();\n    } else {\n        Serial.println("Error opening Data.txt file.");\n        return;\n    }\n}\n\nvoid eraseFile(void) {\n    if (sd.exists(filename)) {\n        sd.remove(filename);\n    }\n}\n')))}f.isMDXComponent=!0}}]);