"use strict";(self.webpackChunkdoc_source=self.webpackChunkdoc_source||[]).push([[448],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=l,c=p["".concat(u,".").concat(f)]||p[f]||g[f]||o;return n?r.createElement(c,a(a({ref:t},d),{},{components:n})):r.createElement(c,a({ref:t},d))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6921:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=n(7462),l=n(3366),o=(n(7294),n(3905)),a=["components"],i={title:"LEDs",toc_max_heading_level:2},u=void 0,s={unversionedId:"Software/LEDs",id:"Software/LEDs",isDocsHomePage:!1,title:"LEDs",description:"The Quarto has a user-controlled RGB LED on the front panel and the red, green and blue LEDs can be individually controlled with the following functions:",source:"@site/Quarto/Software/LEDs.md",sourceDirName:"Software",slug:"/Software/LEDs",permalink:"/Quarto/Software/LEDs",tags:[],version:"current",frontMatter:{title:"LEDs",toc_max_heading_level:2},sidebar:"quarto_main_sidebar",previous:{title:"Triggers",permalink:"/Quarto/Software/Triggers"},next:{title:"Measuring Response Time",permalink:"/Quarto/AppNotes/MeasureLatency"}},d=[{value:"setLED",id:"setled",children:[{value:"Example",id:"example",children:[],level:3}],level:2},{value:"toggleLED",id:"toggleled",children:[{value:"Example",id:"example-1",children:[],level:3}],level:2},{value:"setLEDRed / setLEDGreen / setLEDBlue",id:"setledred--setledgreen--setledblue",children:[{value:"Example",id:"example-2",children:[],level:3}],level:2},{value:"toggleLEDRed / toggleLEDGreen / toggleLEDBlue",id:"toggleledred--toggleledgreen--toggleledblue",children:[{value:"Example",id:"example-3",children:[],level:3}],level:2}],g={toc:d};function p(e){var t=e.components,n=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"Quarto")," has a user-controlled RGB LED on the front panel and the red, green and blue LEDs can be individually controlled with the following functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#setled"},"setLED")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#togglele"},"toggleLED")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDRed")," / ",(0,o.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDGreen")," / ",(0,o.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDBlue")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDRed")," / ",(0,o.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDGreen")," / ",(0,o.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDBlue"))),(0,o.kt)("h2",{id:"setled"},"setLED"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"void setLED(bool red, bool green, bool blue);\n")),(0,o.kt)("p",null,"This function sets the red, green and blue front-panel LED on or off."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"red"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the red LED. ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"green"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the green LED. ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"blue"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the blue LED. ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED.")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"setLED(true,false,false); //Red\nsetLED(false,true,true); //Green and Blue\n")),(0,o.kt)("h2",{id:"toggleled"},"toggleLED"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"void toggleLED(bool red, bool green, bool blue);\n")),(0,o.kt)("p",null,"This function conditionally toggles the state (on or off) of the red, green and or front-panel LED."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"red"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the red LED from on or off, of off to on."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"green"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the green LED from on or off, of off to on."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"blue"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the blue LED from on or off, of off to on.")),(0,o.kt)("h3",{id:"example-1"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"toggleLED(true,false,false); //toggles the red LED\ntoggleLED(false,true,true); //toggle the green and blue LEDs\n")),(0,o.kt)("h2",{id:"setledred--setledgreen--setledblue"},"setLEDRed / setLEDGreen / setLEDBlue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"void setLEDRed(bool on);\nvoid setLEDGreen(bool on);\nvoid setLEDBlue(bool on);\n")),(0,o.kt)("p",null,"These functions set the LED state on or off for the red, green and blue LED respectively.  These functions take the following arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on"))," If set to  ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the LED. ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED.")),(0,o.kt)("h3",{id:"example-2"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"setLEDRed(false); //turn off red LED\nsetLEDBlue(true); //turn on blue LED\n")),(0,o.kt)("h2",{id:"toggleledred--toggleledgreen--toggleledblue"},"toggleLEDRed / toggleLEDGreen / toggleLEDBlue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"void toggleLEDRed(void);\nvoid toggleLEDGreen(void);\nvoid toggleLEDBlue(void);\n")),(0,o.kt)("p",null,"These functions toggle the LED state on or off for the red, green and blue LED respectively.  These functions take no arguments."),(0,o.kt)("h3",{id:"example-3"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"toggleLEDRed(false); //toggle the red LED state\ntoggleLEDGreen(true); //toggle the green LED state\n")))}p.isMDXComponent=!0}}]);