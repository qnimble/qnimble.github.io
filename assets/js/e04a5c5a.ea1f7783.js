"use strict";(self.webpackChunkdoc_source=self.webpackChunkdoc_source||[]).push([[8341],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=l.createContext({}),u=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=u(n),c=r,f=g["".concat(s,".").concat(c)]||g[c]||p[c]||o;return n?l.createElement(f,a(a({ref:t},d),{},{components:n})):l.createElement(f,a({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[g]="string"==typeof e?e:r,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},984:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var l=n(7462),r=(n(7294),n(3905));const o={title:"LEDs",toc_max_heading_level:2},a=void 0,i={unversionedId:"Functions/LEDs",id:"Functions/LEDs",title:"LEDs",description:"The Quarto has a user-controlled RGB LED on the front panel and the red, green and blue LEDs can be individually controlled with the following functions:",source:"@site/Quarto/Functions/LEDs.md",sourceDirName:"Functions",slug:"/Functions/LEDs",permalink:"/Quarto/Functions/LEDs",draft:!1,tags:[],version:"current",frontMatter:{title:"LEDs",toc_max_heading_level:2},sidebar:"autoSideBar",previous:{title:"External Clocks",permalink:"/Quarto/Functions/ExternalClocks"},next:{title:"Memory",permalink:"/Quarto/Functions/Memory"}},s={},u=[{value:"setLED",id:"setled",level:2},{value:"Example",id:"example",level:3},{value:"toggleLED",id:"toggleled",level:2},{value:"Example",id:"example-1",level:3},{value:"setLEDRed / setLEDGreen / setLEDBlue",id:"setledred--setledgreen--setledblue",level:2},{value:"Example",id:"example-2",level:3},{value:"toggleLEDRed / toggleLEDGreen / toggleLEDBlue",id:"toggleledred--toggleledgreen--toggleledblue",level:2},{value:"Example",id:"example-3",level:3}],d={toc:u},g="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"Quarto")," has a user-controlled RGB LED on the front panel and the red, green and blue LEDs can be individually controlled with the following functions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setled"},"setLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#togglele"},"toggleLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDRed")," / ",(0,r.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDGreen")," / ",(0,r.kt)("a",{parentName:"li",href:"#setledred--setledgreen--setledblue"},"setLEDBlue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDRed")," / ",(0,r.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDGreen")," / ",(0,r.kt)("a",{parentName:"li",href:"#toggleledred--toggleledgreen--toggleledblue"},"toggleLEDBlue"))),(0,r.kt)("h2",{id:"setled"},"setLED"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void setLED(bool red, bool green, bool blue);\n")),(0,r.kt)("p",null,"This function sets the red, green and blue front-panel LED on or off."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"red"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the red LED. ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"green"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the green LED. ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"blue"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the blue LED. ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED.")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"setLED(true,false,false); //Red\nsetLED(false,true,true); //Green and Blue\n")),(0,r.kt)("h2",{id:"toggleled"},"toggleLED"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void toggleLED(bool red, bool green, bool blue);\n")),(0,r.kt)("p",null,"This function conditionally toggles the state (on or off) of the red, green and or front-panel LED."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"red"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the red LED from on or off, of off to on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"green"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the green LED from on or off, of off to on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"blue"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, toggles the blue LED from on or off, of off to on.")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"toggleLED(true,false,false); //toggles the red LED\ntoggleLED(false,true,true); //toggle the green and blue LEDs\n")),(0,r.kt)("h2",{id:"setledred--setledgreen--setledblue"},"setLEDRed / setLEDGreen / setLEDBlue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void setLEDRed(bool on);\nvoid setLEDGreen(bool on);\nvoid setLEDBlue(bool on);\n")),(0,r.kt)("p",null,"These functions set the LED state on or off for the red, green and blue LED respectively.  These functions take the following arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"on"))," If set to  ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," or 1, turns on the LED. ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or 0 turns off the LED.")),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"setLEDRed(false); //turn off red LED\nsetLEDBlue(true); //turn on blue LED\n")),(0,r.kt)("h2",{id:"toggleledred--toggleledgreen--toggleledblue"},"toggleLEDRed / toggleLEDGreen / toggleLEDBlue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void toggleLEDRed(void);\nvoid toggleLEDGreen(void);\nvoid toggleLEDBlue(void);\n")),(0,r.kt)("p",null,"These functions toggle the LED state on or off for the red, green and blue LED respectively.  These functions take no arguments."),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"toggleLEDRed(false); //toggle the red LED state\ntoggleLEDGreen(true); //toggle the green LED state\n")))}p.isMDXComponent=!0}}]);