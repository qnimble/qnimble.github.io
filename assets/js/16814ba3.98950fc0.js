(self.webpackChunkdoc_source=self.webpackChunkdoc_source||[]).push([[489],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function g(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=n.createContext({}),u=function(e){var r=n.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(o.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),c=u(t),d=i,f=c["".concat(o,".").concat(d)]||c[d]||s[d]||a;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function d(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=c;var g={};for(var o in r)hasOwnProperty.call(r,o)&&(g[o]=r[o]);g.originalType=e,g.mdxType="string"==typeof e?e:i,l[1]=g;for(var u=2;u<a;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1082:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return g},metadata:function(){return o},toc:function(){return u},default:function(){return s}});var n=t(2122),i=t(9756),a=(t(7294),t(3905)),l=["components"],g={title:"Triggers"},o={unversionedId:"Software/Triggers",id:"Software/Triggers",isDocsHomePage:!1,title:"Triggers",description:'The following functions are available for the two Trigger lines. The "X" in the function name must be replaced by the trigger number (1 or 2):',source:"@site/Quarto/Software/Triggers.md",sourceDirName:"Software",slug:"/Software/Triggers",permalink:"/Quarto/Software/Triggers",version:"current",frontMatter:{title:"Triggers"},sidebar:"quarto_main_sidebar",previous:{title:"Digital I/O",permalink:"/Quarto/Software/Digital"},next:{title:"Measuring Response Time",permalink:"/Quarto/AppNotes/MeasureLatency"}},u=[{value:"setTriggerXDirection",id:"settriggerxdirection",children:[{value:"Example",id:"example",children:[]}]},{value:"setTriggerXLow",id:"settriggerxlow",children:[{value:"Example",id:"example-1",children:[]}]},{value:"setTriggerXHigh",id:"settriggerxhigh",children:[{value:"Example",id:"example-2",children:[]}]},{value:"getTriggerX",id:"gettriggerx",children:[{value:"Example",id:"example-3",children:[]}]},{value:"enableInterruptTriggerX",id:"enableinterrupttriggerx",children:[{value:"Example",id:"example-4",children:[]}]},{value:"disableInterruptTriggerX",id:"disableinterrupttriggerx",children:[{value:"Example",id:"example-5",children:[]}]}],p={toc:u};function s(e){var r=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'The following functions are available for the two Trigger lines. The "X" in the function name must be replaced by the trigger number (1 or 2):'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#settriggerxdirection"},"setTriggerXDirection")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#settriggerxlow"},"setTriggerXLow")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#settriggerxhigh"},"setTriggerXHigh")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#gettriggerx"},"getTriggerX")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#enableinterrupttriggerx"},"enableInterruptTriggerX")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#disableinterrupttriggerx"},"disableInterruptTriggerX"))),(0,a.kt)("h2",{id:"settriggerxdirection"},"setTriggerXDirection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void setTrigger2Direction(io_direction_t direction);\n")),(0,a.kt)("p",null,"This function sets the trigger to be either an input or an output. By default, all triggers are inputs."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"direction"))," Can either be ",(0,a.kt)("inlineCode",{parentName:"li"},"PIN_DIRECTION_OUTPUT")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"PIN_DIRECTION_INPUT"))),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"setTrigger1Direction(PIN_DIRECTION_INPUT);\nsetTrigger2Direction(PIN_DIRECTION_OUTPUT);\n")),(0,a.kt)("h2",{id:"settriggerxlow"},"setTriggerXLow"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void setTriggerXLow(void);\n")),(0,a.kt)("p",null,"This function sets the trigger output to low or 0V. If the trigger is not configured as an output, this function has no effect."),(0,a.kt)("h3",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"setTrigger1Low();\nsetTrigger2Low();\n")),(0,a.kt)("h2",{id:"settriggerxhigh"},"setTriggerXHigh"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void setTriggerXHigh(void);\n")),(0,a.kt)("p",null,"This function sets the trigger output to high or 3.3V. If the trigger is not configured as an output, this function has no effect."),(0,a.kt)("h3",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"setTrigger1High();\nsetTrigger2High();\n")),(0,a.kt)("h2",{id:"gettriggerx"},"getTriggerX"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"bool getTriggerX(void);\n")),(0,a.kt)("p",null,"The function returns true if the trigger is high and false if it is low. This function works when the trigger is configured as an input or an output."),(0,a.kt)("h3",{id:"example-3"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"if (getTrigger1()) {\n    //Trigger1 is high\n    ...\n} else {\n    //Trigger1 is low\n}\nbool result = getTrigger2(); //store Trigger2 level.\n")),(0,a.kt)("h2",{id:"enableinterrupttriggerx"},"enableInterruptTriggerX"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void enableInterruptTriggerX(bool rising_edge, void (*cb_function)(void) );\n")),(0,a.kt)("p",null,"This function configures the trigger to call a function on the rising (or falling) edge of the trigger line."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"rising_edge"))," If set to true, function is called on a rising edge of the signal. If false, then function called on falling edge"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"cb_function"))," Callback function to run on the rising (or falling) edge of the trigger")),(0,a.kt)("h3",{id:"example-4"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void setup() {  \n  enableInterruptTrigger1(true, gotTrigger);\n}\n\nvoid gotTrigger(void) {} \n  ...\n}\n")),(0,a.kt)("h2",{id:"disableinterrupttriggerx"},"disableInterruptTriggerX"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void disableInterruptTriggerX(void);\n")),(0,a.kt)("p",null,"This function disables the trigger's interrupt function. "),(0,a.kt)("h3",{id:"example-5"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void watchTrigger(bool on) {\n    if (on == true) {\n        enableInterruptTrigger1(true, gotTrigger);\n        //call gotTrigger when Trigger 1 goes high\n    } else {\n        disableADC1(); //turn off calling gotTrigger\n    }\n}\n\nvoid gotTrigger(void) {\n      ...\n}\n")))}s.isMDXComponent=!0}}]);